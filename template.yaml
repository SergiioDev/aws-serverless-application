AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-application

  Sample SAM Template for serverless-application

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 2048

Resources:
  UsersApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: JWTAuthorizer
        Authorizers:
          JWTAuthorizer:
            FunctionArn: !GetAtt JWTAuthFunction.Arn
  JWTAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: authorizer.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-key

  UserCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: create.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Architectures:
        - x86_64
      Events:
        UserCreatePostAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/
            Method: post

  UsersRetrieveById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: read.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Architectures:
        - x86_64
      Events:
        UsersRetrieveByIdGetAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/{id}
            Method: get

  UsersUpdateById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: update.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Architectures:
        - x86_64
      Events:
        UsersUpdateByIdPutAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/{id}
            Method: put

  UsersDeleteById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: delete.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Architectures:
        - x86_64
      Events:
        UsersDeleteByIdAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/{id}
            Method: delete

  UserLogin:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: login.app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Events:
        LoginAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/login/
            Method: post

  RefreshToken:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: login.app.token_refresh
      Runtime: python3.9
      Environment:
        Variables:
          SECRET_KEY: secret-info
      Events:
        RefreshTokenAPI:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /users/refresh-token/
            Method: post
